<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="co.sol.mapper.GymMapper">

	

	

	<!--g_no 오름차순으로 정렬된 모든 헬스장의 모든 정보를 가져옵니다. 주소(search)를 input할 경우 필터링 하여 가져옵니다.  -->
	<select id="getList" resultType="co.sol.main.GVO">
		select /*+INDEX_ASC(g_table SYS_C0031863) */ * from g_table
		<if test="value!=null">
			where g_addr like '%'||#{value}||'%'
		</if>
	</select>
	
	
	
	<!--특정 헬스장의 모든 리뷰를 최신순으로 가져옵니다.-->
	<select id="getReview" resultType="co.sol.main.RVO">
		select /*+INDEX_DESC(r_table SYS_C0031865) */ r_no, r_score, r_rev, r_date, u_id
		from r_table natural join u_table
		where g_no = #{g_no}
	</select>
	
	
	
	<!--특정 g_no를 가지는 헬스장의 모든 정보를 가져옵니다.  -->
	<select id="getOneGym" resultType="co.sol.main.GVO">		
		select * from g_table where g_no = #{g_no}	
	</select>
	
	
	
	<!-- 새 리뷰를 insert 합니다 -->
	<insert id="newreview">
		<selectKey keyProperty="r_no" order="BEFORE" resultType="int">
			select max(r_no)+1 from r_table
		</selectKey>
		insert into r_table values (#{r_no}, #{g_no}, #{u_no}, #{r_score}, #{r_rev}, current_date)
	</insert>
	
	
	
	<!-- 리뷰를 삭제합니다. -->
	<delete id="deleteReview">
		delete from r_table where r_no=#{r_no}
	</delete>
	
</mapper>